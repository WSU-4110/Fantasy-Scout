//Code Restructuring In "TEMPLATE METHOD DESIGN" Format
//Date -11.9.2020
//Grant Jones
//
//The Code Will Not Be Rewritten, Will Explain How It Would Be By Deleting Old Code and Writing Format for change
//###############################################################################################################
//###############################################################################################################

//What Can Be Repeated
//-------------------------------------------------
//Place In Template and call class when needed
//1. The double arrow click code segment before source name
//2. The double arrow click for all games after source name
//3. Select all games and iterate through positions while downloading files
//----------------------------------------------------------------



// Generated by Selenium IDE
import org.junit.Test;
import org.junit.Before;
import org.junit.After;
import static org.junit.Assert.*;
import static org.hamcrest.CoreMatchers.is;
import static org.hamcrest.core.IsNot.not;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.firefox.FirefoxDriver;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.remote.RemoteWebDriver;
import org.openqa.selenium.remote.DesiredCapabilities;
import org.openqa.selenium.Dimension;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.interactions.Actions;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;
import org.openqa.selenium.JavascriptExecutor;
import org.openqa.selenium.Alert;
import org.openqa.selenium.Keys;
import java.util.*;
import java.net.MalformedURLException;
import java.net.URL;



public class UntitledTest {
  private WebDriver driver;
  private Map<String, Object> vars;
  JavascriptExecutor js;
  @Before
  public void setUp() {
    driver = new ChromeDriver();
    js = (JavascriptExecutor) driver;
    vars = new HashMap<String, Object>();
  }
  @After
  public void tearDown() {
    driver.quit();
  }

  @Test
  public void untitled() {
    driver.get("https://www.fantasyalarm.com/nfl/projections/daily/qb/FD/All%20Games");
    driver.manage().window().setSize(new Dimension(1066, 818));



    //DOUBLE ARROW CLICK TO ENSURE BROWSER WORKS FOR SELECTING SOURCE
    //Place In Class For Repetition
    public void preDoubleClick () {
      {
        WebElement element = driver.findElement(By.cssSelector("#scoring-selector .fa"));
        Actions builder = new Actions(driver);
        builder.moveToElement(element).perform();
      }
      {
        WebElement element = driver.findElement(By.cssSelector("#scoring-selector .fa"));
        Actions builder = new Actions(driver);
        builder.moveToElement(element).perform();
      }
    }

    //REPEAT BY NAME OF SOURCE, NEED ALL TO MANUALLY INCORPORATE THE SOURCES IN ORDER


    //DOUBLE ARROW CLICK TO ENSURE BROWSER WORKS
    //Place In Class For Repetition
    public void postDoubleClick () {
      {
        WebElement element = driver.findElement(By.cssSelector("#slate-selector .dropdown-arrow"));
        Actions builder = new Actions(driver);
        builder.moveToElement(element).perform();
      }
      {
        WebElement element = driver.findElement(By.cssSelector("#slate-selector .dropdown-arrow"));
        Actions builder = new Actions(driver);
        builder.moveToElement(element).perform();
      }
    }

    //SELECT ALL GAMES TO ENSURE PROPER LINEUP FOR PAGE REFRESH BY SOURCE
    //Place In Class For Repetition
    public void positionIterator () {
      driver.findElement(By.linkText("All Games")).click();

      driver.findElement(By.cssSelector(".radio:nth-child(1) > .bg-sport-nfl")).click();
      driver.findElement(By.cssSelector(".export > .btn")).click();
      driver.findElement(By.linkText("PDF")).click();
      driver.findElement(By.cssSelector(".radio:nth-child(2) > .bg-sport-nfl")).click();
      driver.findElement(By.cssSelector(".export > .btn")).click();
      driver.findElement(By.linkText("PDF")).click();
      driver.findElement(By.cssSelector(".radio:nth-child(3) > .bg-sport-nfl")).click();
      driver.findElement(By.cssSelector(".export > .btn")).click();
      driver.findElement(By.linkText("PDF")).click();
      driver.findElement(By.cssSelector(".radio:nth-child(4) > .bg-sport-nfl")).click();
      driver.findElement(By.cssSelector(".export > .btn")).click();
      driver.findElement(By.linkText("PDF")).click();
      driver.findElement(By.cssSelector(".radio:nth-child(5) > .bg-sport-nfl")).click();
      driver.findElement(By.cssSelector(".export > .btn")).click();
      driver.findElement(By.linkText("PDF")).click();
      driver.findElement(By.cssSelector(".radio:nth-child(6) > .bg-sport-nfl")).click();
      driver.findElement(By.cssSelector(".export > .btn")).click();
      driver.findElement(By.linkText("PDF")).click();
      driver.findElement(By.cssSelector(".radio:nth-child(7) > .bg-sport-nfl")).click();
      driver.findElement(By.cssSelector(".fa-download")).click();
      driver.findElement(By.linkText("PDF")).click();
      driver.findElement(By.cssSelector(".radio:nth-child(8) > .bg-sport-nfl")).click();
      driver.findElement(By.cssSelector(".export > .btn")).click();
      driver.findElement(By.linkText("PDF")).click();
      driver.findElement(By.cssSelector(".radio:nth-child(9) > .bg-sport-nfl")).click();
      driver.findElement(By.cssSelector(".export > .btn")).click();
      driver.findElement(By.linkText("PDF")).click();
      driver.findElement(By.cssSelector(".radio:nth-child(10) > .bg-sport-nfl")).click();
      driver.findElement(By.cssSelector(".export > .btn")).click();
      driver.findElement(By.linkText("PDF")).click();
      driver.findElement(By.cssSelector(".radio:nth-child(11) > .bg-sport-nfl")).click();
      driver.findElement(By.cssSelector(".export > .btn")).click();
      driver.findElement(By.linkText("PDF")).click();
    }

    //Implementation of the class grouping around sources
    preDoubleClick();
    driver.findElement(By.linkText("FanDuel")).click();
    postDoubleClick();
    positionIterator();

    preDoubleClick();
    driver.findElement(By.linkText("DraftKings")).click();
    postDoubleClick();
    positionIterator();

    preDoubleClick();
    driver.findElement(By.linkText("Y! Daily")).click();
    postDoubleClick();
    positionIterator();

    preDoubleClick();
    driver.findElement(By.linkText("CBS")).click();
    postDoubleClick();
    positionIterator();

    preDoubleClick();
    driver.findElement(By.linkText("ESPN")).click();
    postDoubleClick();
    positionIterator();

    preDoubleClick();
    driver.findElement(By.linkText("Fanball")).click();
    postDoubleClick();
    positionIterator();

    preDoubleClick();
    driver.findElement(By.linkText("RTDaily")).click();
    postDoubleClick();
    positionIterator();

    preDoubleClick();
    driver.findElement(By.linkText("NFFC")).click();
    postDoubleClick();
    positionIterator();

    preDoubleClick();
    driver.findElement(By.linkText("FFPC")).click();
    postDoubleClick();
    positionIterator();

    preDoubleClick();
    driver.findElement(By.linkText("BB10")).click();
    postDoubleClick();
    positionIterator();

    preDoubleClick();
    driver.findElement(By.linkText("TDO")).click();
    postDoubleClick();
    positionIterator();

    preDoubleClick();
    driver.findElement(By.linkText("CDM")).click();
    postDoubleClick();
    positionIterator();

    preDoubleClick();
    driver.findElement(By.linkText("RTDM")).click();
    postDoubleClick();
    positionIterator();

    preDoubleClick();
    driver.findElement(By.linkText("Fantrax")).click();
    postDoubleClick();
    positionIterator();

    preDoubleClick();
    driver.findElement(By.linkText("H2H Weekly")).click();
    postDoubleClick();
    positionIterator();

